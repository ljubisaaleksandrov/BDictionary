
@using BDictionary.UI.Models.Identity
@{
    var menuItems = ViewBag.AdminNavigationMenu as IEnumerable<MenuItem>;
    string activeController = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();

    if (menuItems != null)
    {
        <div class="navbar navbar-default">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        @foreach (var menuItem in menuItems)
                        {
                            var cssParent = string.Compare(menuItem.Controller, activeController, true) == 0 ? "active" : "";
                            var linkCss = "";
                            var hasSubMenu = false;
                            if (menuItem.SubMenu != null && menuItem.SubMenu.Any())
                            {
                                hasSubMenu = true;
                                if (menuItem.SubMenu.Any(s => string.Compare(s.Controller, activeController, true) == 0))
                                {
                                    cssParent = "active open";
                                }
                                linkCss = "dropdown-toggle";
                            }
                            <li class="@cssParent">
                                <a href="@Url.Action(menuItem.Action,  menuItem.Controller)" title="@menuItem.DisplayText" class="@linkCss">
                                    <i class="@menuItem.IconCss"></i>
                                    <span class="menu-text">@menuItem.DisplayText</span>
                                </a>
                                @if (hasSubMenu)
                                {
                                    <ul class="submenu">
                                        @foreach (var sub in menuItem.SubMenu)
                                        {
                                            var cssSub = string.Compare(sub.Controller, activeController, true) == 0 ? "active" : "";
                                            <li class="@cssSub">
                                                <a href="@Url.Action(sub.Action, sub.Controller)" title="@sub.DisplayText">
                                                    <i class="@sub.IconCss"></i>
                                                    @sub.DisplayText
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
}
